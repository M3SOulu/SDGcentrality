<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>
    <!-- 可以用于加载配置项或者配置文件，在整个配置文件中就可以使用${propertyKey}的方式来引用配置项
    resource：配置资源加载地址，使用resource，MBG从classpath开始找，比如com/myproject/generatorConfig.properties
    url：配置资源加载地质，使用URL的方式，比如file:///C:/myfolder/generatorConfig.properties.
        注意，两个属性只能选址一个;

        另外，如果使用了mybatis-generator-maven-plugin，那么在pom.xml中定义的properties都可以直接在generatorConfig.xml中使用
    <properties resource="" url="" />
     -->
    <properties resource="application.properties"/>
    <!--
    context:生成一组对象的环境
    id:必选，上下文id，用于在生成错误时提示
    defaultModelType:指定生成对象的样式
        1，conditional：类似hierarchical；
        2，flat：所有内容（主键，blob）等全部生成在一个对象中；
        3，hierarchical：主键生成一个XXKey对象(key class)，Blob等单独生成一个对象，其他简单属性在一个对象中(record class)
    targetRuntime:
        1，MyBatis3：默认的值，生成基于MyBatis3.x以上版本的内容，包括XXXBySample；
        2，MyBatis3Simple：类似MyBatis3，只是不生成XXXBySample；
    introspectedColumnImpl：类全限定名，用于扩展MBG
    -->
    <context id="Mysql" targetRuntime="MyBatis3Simple" defaultModelType="flat">
        <property name="beginningDelimiter" value="`"/>
        <property name="endingDelimiter" value="`"/>

        <!-- 格式化java代码 -->
        <property name="javaFormatter" value="org.mybatis.generator.api.dom.DefaultJavaFormatter"/>
        <!-- 格式化XML代码 -->
        <property name="xmlFormatter" value="org.mybatis.generator.api.dom.DefaultXmlFormatter"/>

        <!-- 生成的文件编码 -->
        <property name="javaFileEncoding" value="utf-8"/>
        <!-- 通过自定义插件类生成自定义注解和接口 -->
        <plugin type="com.cms.scaffold.plugin.mybatis.generator.GenPlugin">
            <property name="mappers" value="BaseMapper"/>
        </plugin>
        <commentGenerator>
            <!-- 取消生成注释 -->
            <property name="suppressAllComments" value="true"/>
        </commentGenerator>
        <!-- 数据库连接属性 -->
        <!--数据库链接URL，用户名、密码 -->
        <jdbcConnection driverClass="com.mysql.cj.jdbc.Driver"
                        connectionURL="${generator.connectionUrl}" userId="${generator.connectionUserId}"
                        password="${generator.connectionPwd}"/>

        <!-- java类型处理器
               用于处理DB中的类型到Java中的类型，默认使用JavaTypeResolverDefaultImpl；
               注意一点，默认会先尝试使用Integer，Long，Short等来对应DECIMAL和 NUMERIC数据类型；
           -->
        <javaTypeResolver type="com.cms.scaffold.plugin.mybatis.generator.types.JavaTypeResolverDefaultImpl">
            <!--
                true：使用BigDecimal对应DECIMAL和 NUMERIC数据类型
                false：默认,
                    scale>0;length>18：使用BigDecimal;
                    scale=0;length[10,18]：使用Long；
                    scale=0;length[5,9]：使用Integer；
                    scale=0;length<5：使用Short；
             -->
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>

        <!-- 生成实体类配置 -->
        <javaModelGenerator targetPackage="${generator.javaModelTargetPackage}"
                            targetProject="D:\\workspace${generator.javaModelTargetProject}">
            <property name="rootClass" value="BaseEntity"/>
        </javaModelGenerator>
        <!-- 生成映射文件配置 -->
        <sqlMapGenerator targetPackage="${generator.sqlMapTargetPackage}"
                         targetProject="D:\\workspace${generator.sqlMapTargetProject}"/>
        <!-- 生成映射接口配置 -->
        <javaClientGenerator targetPackage="${generator.javaClientTargetPackage}"
                             targetProject="D:\\workspace${generator.javaClientTargetProject}" type="XMLMAPPER"/>
        <table tableName="${generator.tableName}" domainObjectName="${generator.domainObjectName}">
            <!--mysql 配置 -->
            <generatedKey column="id" sqlStatement="Mysql" identity="true"/>
        </table>
    </context>

    <context id="BO" targetRuntime="MyBatis3Simple" defaultModelType="flat">
        <property name="beginningDelimiter" value="`"/>
        <property name="endingDelimiter" value="`"/>
        <!-- 格式化java代码 -->
        <property name="javaFormatter" value="org.mybatis.generator.api.dom.DefaultJavaFormatter"/>
        <!-- 格式化XML代码 -->
        <property name="xmlFormatter" value="org.mybatis.generator.api.dom.DefaultXmlFormatter"/>
        <!-- 生成的文件编码 -->
        <property name="javaFileEncoding" value="utf-8"/>
        <!-- 通过自定义插件类生成自定义注解和接口 -->
        <plugin type="com.cms.scaffold.plugin.mybatis.generator.GenPlugin">
            <property name="mappers" value="BaseMapper"/>
        </plugin>
        <commentGenerator>
            <!-- 取消生成注释 -->
            <property name="suppressAllComments" value="true"/>
        </commentGenerator>
        <!-- 数据库连接属性 -->
        <!--数据库链接URL，用户名、密码 -->
        <jdbcConnection driverClass="com.mysql.cj.jdbc.Driver"
                        connectionURL="${generator.connectionUrl}" userId="${generator.connectionUserId}"
                        password="${generator.connectionPwd}"/>
        <javaTypeResolver type="com.cms.scaffold.plugin.mybatis.generator.types.JavaTypeResolverDefaultImpl">
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>
        <!-- 生成实体类配置 -->
        <javaModelGenerator targetPackage="${generator.BO.javaModelTargetPackage}"
                            targetProject="D:\\workspace${generator.api.javaModelTargetProject}">
            <property name="rootClass" value="BaseEntity"/>
        </javaModelGenerator>
        <table tableName="${generator.tableName}" domainObjectName="${generator.BO.domainObjectName}">
            <!--mysql 配置 -->
            <generatedKey column="id" sqlStatement="Mysql" identity="true"/>
        </table>
    </context>


    <context id="AO" targetRuntime="MyBatis3Simple" defaultModelType="flat">
        <property name="beginningDelimiter" value="`"/>
        <property name="endingDelimiter" value="`"/>
        <!-- 格式化java代码 -->
        <property name="javaFormatter" value="org.mybatis.generator.api.dom.DefaultJavaFormatter"/>
        <!-- 格式化XML代码 -->
        <property name="xmlFormatter" value="org.mybatis.generator.api.dom.DefaultXmlFormatter"/>
        <!-- 生成的文件编码 -->
        <property name="javaFileEncoding" value="utf-8"/>
        <!-- 通过自定义插件类生成自定义注解和接口 -->
        <plugin type="com.cms.scaffold.plugin.mybatis.generator.GenPlugin">
            <property name="mappers" value="BaseMapper"/>
        </plugin>
        <commentGenerator>
            <!-- 取消生成注释 -->
            <property name="suppressAllComments" value="true"/>
        </commentGenerator>
        <!-- 数据库连接属性 -->
        <!--数据库链接URL，用户名、密码 -->
        <jdbcConnection driverClass="com.mysql.cj.jdbc.Driver"
                        connectionURL="${generator.connectionUrl}" userId="${generator.connectionUserId}"
                        password="${generator.connectionPwd}"/>
        <javaTypeResolver type="com.cms.scaffold.plugin.mybatis.generator.types.JavaTypeResolverDefaultImpl">
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>
        <!-- 生成实体类配置 -->
        <javaModelGenerator targetPackage="${generator.AO.javaModelTargetPackage}"
                            targetProject="D:\\workspace${generator.api.javaModelTargetProject}">
            <property name="rootClass" value="BaseEntity"/>
        </javaModelGenerator>
        <table tableName="${generator.tableName}" domainObjectName="${generator.AO.domainObjectName}">
            <!--mysql 配置 -->
            <generatedKey column="id" sqlStatement="Mysql" identity="true"/>
        </table>
    </context>
</generatorConfiguration>
