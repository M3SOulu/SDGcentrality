<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cms.scaffold.micro.sys.dao.SysDictMapper">
  <resultMap id="BaseResultMap" type="com.cms.scaffold.micro.sys.domain.SysDict">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="i18n_nid" jdbcType="VARCHAR" property="i18nNid" />
    <result column="nid" jdbcType="VARCHAR" property="nid" />
    <result column="pid" jdbcType="INTEGER" property="pid" />
    <result column="value" jdbcType="VARCHAR" property="value" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="java_type" jdbcType="VARCHAR" property="javaType" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="relate_id" jdbcType="VARCHAR" property="relateId" />
  </resultMap>
  <sql id="sql_columns">
    id,name,i18n_nid,nid,pid,value,type,code,java_type,sort,status,remark,add_time,update_time,relate_id
  </sql>
  <sql id="sql_where">
    <where>
          <if test="null != id and '' != id or 0 ==id">and id = #{id}</if>
          <if test="null != name and '' != name">and name = #{name}</if>
          <if test="null != i18nNid and '' != i18nNid">and i18n_nid = #{i18nNid}</if>
          <if test="null != nid and '' != nid">and nid = #{nid}</if>
          <if test="null != pid and '' != pid or 0 ==pid">and pid = #{pid}</if>
          <if test="null != value and '' != value">and value = #{value}</if>
          <if test="null != type and '' != type or 0 ==type">and type = #{type}</if>
          <if test="null != code and '' != code">and code = #{code}</if>
          <if test="null != javaType and '' != javaType">and java_type = #{javaType}</if>
          <if test="null != sort and '' != sort or 0 ==sort">and sort = #{sort}</if>
          <if test="null != status and '' != status or 0 ==status">and status = #{status}</if>
          <if test="null != remark and '' != remark">and remark = #{remark}</if>
          <if test="null != addTime and '' != addTime">and add_time = #{addTime}</if>
          <if test="null != updateTime and '' != updateTime">and update_time = #{updateTime}</if>
          <if test="null != relateId and '' != relateId">and relate_id = #{relateId}</if>
	</where>
  </sql>
  <sql id="sql_map_where">
    <where>
	  <foreach collection="map.keys" item="k" separator="and">
 	      <if test="null != map[k]">
	          a.${k} = #{map[${k}]}
	      </if>
	  </foreach>
	</where>
  </sql>
  <select id="selectById" resultMap="BaseResultMap">
    select <include refid="sql_columns" /> from sys_dict where id = #{id}
  </select>
  <select id="selectCacheById" resultMap="BaseResultMap">
    select <include refid="sql_columns" /> from sys_dict where id = #{id}
  </select>
  <select id="selectLockById" resultMap="BaseResultMap">
    select <include refid="sql_columns" /> from sys_dict where id = #{id} for update
  </select>
  <select id="selectOne" resultMap="BaseResultMap">
    select <include refid="sql_columns" /> from sys_dict <include refid="sql_where" />
  </select>
  <select id="findList" resultMap="BaseResultMap">
    select <include refid="sql_columns" /> from sys_dict <include refid="sql_where" />
  </select>
  <select id="selectMap" resultMap="BaseResultMap">
    select <include refid="sql_columns" /> from sys_dict <include refid="sql_map_where" />
  </select>
  <select id="count" resultType="java.lang.Integer">
    select count(1) from sys_dict <include refid="sql_where" />
  </select>
  <sql id="sql_insert_columns">
    insert into sys_dict
	 <trim prefix="(" suffix=")" suffixOverrides=",">
	  <if test="null != item.name"> name,</if>
	  <if test="null != item.i18nNid"> i18n_nid,</if>
	  <if test="null != item.nid"> nid,</if>
	  <if test="null != item.pid"> pid,</if>
	  <if test="null != item.value"> value,</if>
	  <if test="null != item.type"> type,</if>
	  <if test="null != item.code"> code,</if>
	  <if test="null != item.javaType"> java_type,</if>
	  <if test="null != item.sort"> sort,</if>
	  <if test="null != item.status"> status,</if>
	  <if test="null != item.remark"> remark,</if>
	  <if test="null != item.addTime"> add_time,</if>
	  <if test="null != item.updateTime"> update_time,</if>
	  <if test="null != item.relateId"> relate_id,</if>
	</trim>
  </sql>
  <sql id="sql_insert_values">
        <trim prefix="values (" suffix=")" suffixOverrides=",">
	  <if test="null != item.name"> #{item.name},</if>
	  <if test="null != item.i18nNid"> #{item.i18nNid},</if>
	  <if test="null != item.nid"> #{item.nid},</if>
	  <if test="null != item.pid"> #{item.pid},</if>
	  <if test="null != item.value"> #{item.value},</if>
	  <if test="null != item.type"> #{item.type},</if>
	  <if test="null != item.code"> #{item.code},</if>
	  <if test="null != item.javaType"> #{item.javaType},</if>
	  <if test="null != item.sort"> #{item.sort},</if>
	  <if test="null != item.status"> #{item.status},</if>
	  <if test="null != item.remark"> #{item.remark},</if>
	  <if test="null != item.addTime"> #{item.addTime},</if>
	  <if test="null != item.updateTime"> #{item.updateTime},</if>
	  <if test="null != item.relateId"> #{item.relateId},</if>
	</trim>
  </sql>
  <insert id="insert" keyProperty="item.id" useGeneratedKeys="true">
    <include refid="sql_insert_columns" /><include refid="sql_insert_values" />
  </insert>
  <insert id="batchInsert">
    <foreach close="" collection="list" index="index" item="item" open="" separator=";">
	  <include refid="sql_insert_columns" /><include refid="sql_insert_values" />
	</foreach>
  </insert>
  <sql id="sql_update">
    update sys_dict set id = #{item.id}
      <if test="null != item.name">, name = #{item.name}</if>
      <if test="null != item.i18nNid">, i18n_nid = #{item.i18nNid}</if>
      <if test="null != item.nid">, nid = #{item.nid}</if>
      <if test="null != item.pid">, pid = #{item.pid}</if>
      <if test="null != item.value">, value = #{item.value}</if>
      <if test="null != item.type">, type = #{item.type}</if>
      <if test="null != item.code">, code = #{item.code}</if>
      <if test="null != item.javaType">, java_type = #{item.javaType}</if>
      <if test="null != item.sort">, sort = #{item.sort}</if>
      <if test="null != item.status">, status = #{item.status}</if>
      <if test="null != item.remark">, remark = #{item.remark}</if>
      <if test="null != item.addTime">, add_time = #{item.addTime}</if>
      <if test="null != item.updateTime">, update_time = #{item.updateTime}</if>
      <if test="null != item.relateId">, relate_id = #{item.relateId}</if>
	where id = #{item.id}
  </sql>
  <sql id="sql_update_all">
    update sys_dict set id = #{item.id}
	  , name = #{item.name}
	  , i18n_nid = #{item.i18nNid}
	  , nid = #{item.nid}
	  , pid = #{item.pid}
	  , value = #{item.value}
	  , type = #{item.type}
	  , code = #{item.code}
	  , java_type = #{item.javaType}
	  , sort = #{item.sort}
	  , status = #{item.status}
	  , remark = #{item.remark}
	  , add_time = #{item.addTime}
	  , update_time = #{item.updateTime}
	  , relate_id = #{item.relateId}
	where id = #{item.id}
  </sql>
  <update id="update">
    <include refid="sql_update" />
  </update>
  <update id="batchUpdate">
    <foreach close="" collection="list" index="index" item="item" open="" separator=";">
	  <include refid="sql_update" />
	</foreach>
  </update>
  <update id="updateAll">
    <include refid="sql_update_all" />
  </update>
  <update id="updateCompare" />
  <delete id="delArray">
    delete from sys_dict where id in
	<foreach close=")" collection="array" index="index" item="item" open="(" separator=",">#{item}</foreach>
  </delete>
  <delete id="delList">
    delete from sys_dict where id in
	<foreach close=")" collection="list" index="index" item="item" open="(" separator=",">#{item}</foreach>
  </delete>
</mapper>
