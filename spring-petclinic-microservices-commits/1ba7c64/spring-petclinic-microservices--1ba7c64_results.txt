Microservices:

{'name': 'config-server', 'type': 'service', 'stereotype_instances': ['configuration_server', 'infrastructural'], 'tagged_values': [('Port', 8888), ('Configuration Server', 'Spring Cloud Config')]}
{'name': 'discovery-server', 'type': 'service', 'stereotype_instances': ['infrastructural', 'service_discovery'], 'tagged_values': [('Service Discovery', 'Eureka')]}
{'name': 'admin-server', 'type': 'service', 'stereotype_instances': ['infrastructural', 'administration_server'], 'tagged_values': [('Administration Server', 'Spring Boot Admin')]}
{'name': 'vets-service', 'type': 'service', 'stereotype_instances': ['internal'], 'tagged_values': [('Endpoints', "['/vets']")]}
{'name': 'api-gateway', 'type': 'service', 'stereotype_instances': ['gateway', 'infrastructural', 'load_balancer', 'circuit_breaker'], 'tagged_values': [('Gateway', 'Spring Cloud Gateway'), ('Load Balancer', 'Spring Cloud'), ('Endpoints', "['/api/gateway', '/api/gatewayowners/{ownerId}']"), ('Circuit Breaker', 'Hystrix')]}
{'name': 'customers-service', 'type': 'service', 'stereotype_instances': ['internal', 'local_logging'], 'tagged_values': [('Logging Technology', 'Lombok'), ('Endpoints', "['/owners/{ownerId}', '/owners']")]}
{'name': 'visits-service', 'type': 'service', 'stereotype_instances': ['internal', 'local_logging'], 'tagged_values': [('Logging Technology', 'Lombok')]}
{'name': 'prometheus-server', 'type': 'service', 'stereotype_instances': ['internal'], 'tagged_values': [('Port', 9091)]}
{'name': 'grafana-server', 'type': 'service', 'stereotype_instances': ['internal'], 'tagged_values': [('Port', 3000)]}
{'name': 'tracing-server', 'type': 'service', 'stereotype_instances': ['infrastructural', 'tracing_server'], 'tagged_values': [('Port', 9411), ('Tracing Server', 'Zipkin')]}
{'name': 'prometheus_server', 'stereotype_instances': ['infrastructural', 'metrics_server'], 'tagged_values': [('Metrics Server', 'Prometheus')], 'type': 'service'}

Information Flows:

{'sender': 'github-repository', 'receiver': 'config-server', 'stereotype_instances': ['restful_http']}
{'sender': 'config-server', 'receiver': 'discovery-server', 'stereotype_instances': ['restful_http']}
{'sender': 'config-server', 'receiver': 'admin-server', 'stereotype_instances': ['restful_http']}
{'sender': 'config-server', 'receiver': 'vets-service', 'stereotype_instances': ['restful_http']}
{'sender': 'config-server', 'receiver': 'api-gateway', 'stereotype_instances': ['restful_http']}
{'sender': 'config-server', 'receiver': 'customers-service', 'stereotype_instances': ['restful_http']}
{'sender': 'config-server', 'receiver': 'visits-service', 'stereotype_instances': ['restful_http']}
{'sender': 'customers-service', 'receiver': 'discovery-server', 'stereotype_instances': ['restful_http']}
{'sender': 'discovery-server', 'receiver': 'api-gateway', 'stereotype_instances': ['restful_http']}
{'sender': 'admin-server', 'receiver': 'discovery-server', 'stereotype_instances': ['restful_http']}
{'sender': 'vets-service', 'receiver': 'discovery-server', 'stereotype_instances': ['restful_http']}
{'sender': 'visits-service', 'receiver': 'discovery-server', 'stereotype_instances': ['restful_http']}
{'sender': 'user', 'receiver': 'api-gateway', 'stereotype_instances': ['restful_http']}
{'sender': 'api-gateway', 'receiver': 'user', 'stereotype_instances': ['restful_http', 'load_balanced_link', 'circuit_breaker_link'], 'tagged_values': [('Load Balancer', 'Spring Cloud'), ('Circuit Breaker', 'Hystrix')]}
{'sender': 'api-gateway', 'receiver': 'customers-service', 'stereotype_instances': ['restful_http', 'load_balanced_link', 'circuit_breaker_link'], 'tagged_values': [('Load Balancer', 'Spring Cloud'), ('Circuit Breaker', 'Hystrix')]}
{'sender': 'api-gateway', 'receiver': 'vets-service', 'stereotype_instances': ['restful_http', 'load_balanced_link', 'circuit_breaker_link'], 'tagged_values': [('Load Balancer', 'Spring Cloud'), ('Circuit Breaker', 'Hystrix')]}
{'sender': 'api-gateway', 'receiver': 'visits-service', 'stereotype_instances': ['restful_http', 'load_balanced_link', 'circuit_breaker_link'], 'tagged_values': [('Load Balancer', 'Spring Cloud'), ('Circuit Breaker', 'Hystrix')]}
{'sender': 'api-gateway', 'receiver': 'prometheus_server', 'stereotype_instances': ['restful_http', 'load_balanced_link', 'circuit_breaker_link'], 'tagged_values': [('Load Balancer', 'Spring Cloud'), ('Circuit Breaker', 'Hystrix')]}
{'sender': 'customers-service', 'receiver': 'prometheus_server', 'stereotype_instances': ['restful_http']}
{'sender': 'visits-service', 'receiver': 'prometheus_server', 'stereotype_instances': ['restful_http']}
{'sender': 'vets-service', 'receiver': 'prometheus_server', 'stereotype_instances': ['restful_http']}

External Components:

{'name': 'github-repository', 'type': 'external_component', 'stereotype_instances': ['entrypoint', 'github_repository'], 'tagged_values': [('URL', 'https://github.com/spring-petclinic/spring-petclinic-microservices-config')]}
{'name': 'user', 'type': 'external_component', 'stereotype_instances': ['entrypoint', 'exitpoint', 'user_stereotype']}